---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
# TODO: Finish this
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app mssql
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      mssql:
        type: statefulset
        strategy: RollingUpdate
        replicas: 1
        containers:
          app:
            image:
              repository: mcr.microsoft.com/mssql/server
              tag: 2022-CU11-ubuntu-22.04
            env:
              ACCEPT_EULA: "Y"
              MSSQL_COLLATION: SQL_Latin1_General_CP1_CI_AS
              MSSQL_ENABLE_HADR: "1"
              MSSQL_AGENT_ENABLED: "true"
              MSSQL_BACKUP_DIR: "/var/opt/backups"
              MSSQL_MEMORY_LIMIT_MB: "2G"
            envFrom:
              - secretRef:
                  name: mssql-secret
            resources:
              requests:
                cpu: 100m
                memory: 2G
              limits:
                cpu: 500m
                memory: 2G
            #securityContext:
            #  allowPrivilegeEscalation: false
            #  readOnlyRootFilesystem: true
            #  capabilities: { drop: ["ALL"] }
    # TODO: Add more nodes
    # defaultPodOptions:
    #   #securityContext:
    #   #  runAsNonRoot: true
    #   #  runAsUser: 65534
    #   #  runAsGroup: 65534
    #   #  seccompProfile: { type: RuntimeDefault }
    #   topologySpreadConstraints:
    #     - maxSkew: 1
    #       topologyKey: kubernetes.io/hostname
    #       whenUnsatisfiable: DoNotSchedule
    #       labelSelector:
    #         matchLabels:
    #           app.kubernetes.io/name: *app
    service:
      app:
        controller: *app
        ports:
          sql:
            port: 1433
    serviceAccount:
      create: true
      name: *app
    persistence:
      data:
        storageClass: cluster-nvme
        accessMode: ReadWriteOnce
        size: 24Gi
        retain: true
        globalMounts:
          - path: /var/opt/mssql
      backups:
        storageClass: cluster-nvme
        accessMode: ReadWriteOnce
        size: 10Gi
        retain: true
        globalMounts:
          - path: /var/opt/backups
