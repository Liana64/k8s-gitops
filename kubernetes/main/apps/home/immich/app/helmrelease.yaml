---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      server:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: immich-secret
          configmap.reloader.stakater.com/reload: immich-configmap
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
        initContainers:
          init-db:
            image:
              repository: ghcr.io/liana64/postgres-init
              tag: 16
              pullPolicy: IfNotPresent
            env:
              INIT_POSTGRES_HOST: postgres-1-rw.database.svc.cluster.local
              INIT_POSTGRES_DBNAME: immich
              INIT_POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: &secret immich-secret
                    key: IMMICH_DB_USER
              INIT_POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: IMMICH_DB_PASSWORD
              INIT_POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: cloudnative-pg-secret
                    key: password
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.142.1@sha256:06bc7715fa4c4a1641bd0b566c949cd7327f420632b480389fd4d1e70665d046
            envFrom:
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-configmap
      machine-learning:
        strategy: RollingUpdate
        annotations:
          secret.reloader.stakater.com/reload: immich-secret
          configmap.reloader.stakater.com/reload: immich-configmap
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.142.1@sha256:9855f6a0a998db508ca97894997b17f3a0a61e9388b204d861110c19c42814eb
            envFrom:
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-configmap
            env:
              MPLCONFIGDIR: "/cache/matplotlib"

    service:
      server:
        controller: server
        ports:
          http:
            port: &port 2283
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003

    ingress:
      server:
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: Immich
          gethomepage.dev/description: Photo managed
          gethomepage.dev/icon: immich
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_INTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: server
                  port: *port
        tls:
          - secretName: immich-tls
            hosts: [*host]

    persistence:
      matplotlib:
        type: emptyDir
        advancedMounts:
          server:
            main:
              - path: /config/matplotlib
      data:
        existingClaim: syncthing
        advancedMounts:
          server:
            main:
              - path: /var/syncthing
      machine-learning-cache:
        storageClass: cluster-nvme
        accessMode: ReadWriteOnce
        size: 8Gi
        advancedMounts:
          machine-learning:
            main:
              - path: /cache
                subPath: cache
              - path: /.cache
                subPath: dotCache
      tmpfs:
        type: emptyDir
        advancedMounts:
          server:
            main:
              - path: /usr/src/app/.reverse-geocoding-dump
                subPath: geocoding
              - path: /usr/src/app/.transformers_cache
                subPath: transformers
