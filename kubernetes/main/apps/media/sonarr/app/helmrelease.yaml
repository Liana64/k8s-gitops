---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            #fsGroup: 3005
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: ghcr.io/liana64/sonarr-develop
              tag: 4.0.15.2940@sha256:57403e30fca9c78e520d75a2f498dab075e7b80967216f5d7472603d15e00005
            env:
              COMPlus_EnableDiagnostics: "0"
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: sonarr-secret
                    key: api_key
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 8989
              SONARR__UPDATE__BRANCH: develop
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 20m
                memory: 384Mi
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL

    service:
      app:
        controller: sonarr
        ports:
          http:
            port: *port

    ingress:
      app:
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_EXTERNAL_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Sonarr
          gethomepage.dev/description: Shows
          gethomepage.dev/icon: sonarr
        hosts:
          - host: &host "sonarr.${SECRET_INTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: sonarr-tls
            hosts: [*host]

    persistence:
      config:
        storageClass: cluster-nvme
        accessMode: ReadWriteOnce
        size: 1Gi
        retain: true
        globalMounts:
          - path: /config
      media:
        enabled: true
        existingClaim: qbittorrent-media
        advancedMounts:
          sonarr:
            app:
              - path: /media
      #      nfs-media:
      #        type: nfs
      #        server: ${NFS_HOST}
      #        path: ${NFS_MEDIA}
      #        advancedMounts:
      #          sonarr:
      #            app:
      #              - path: /data/r720xd-media
      #                readOnly: false
