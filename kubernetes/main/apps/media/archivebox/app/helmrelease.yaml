---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app archivebox
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    fullnameOverride: *app
    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: "OnRootMismatch"
        runAsNonRoot: false
        seccompProfile:
          type: RuntimeDefault
    controllers:
      archivebox:
        containers:
          app:
            image:
              repository: ghcr.io/archivebox/archivebox
              tag: 0.7.2
            args: ["server"]
            env:
              PUID: 1000
              PGID: 1000
              ONLY_NEW: False
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                cpu: 200m
                memory: 512Mi
        initContainers:
          init:
            image:
              repository: ghcr.io/archivebox/archivebox
              tag: 0.7.2
            args: ["init"]
            env:
              TZ: "${TIMEZONE}"
              PUID: 1000
              PGID: 1000
              ONLY_NEW: False
            envFrom:
              - secretRef:
                  name: archivebox-secret
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                cpu: 200m
                memory: 512Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8000
    ingress:
      app:
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: ArchiveBox
          gethomepage.dev/description: Website archiver
          gethomepage.dev/icon: archivebox
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_INTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: archivebox-tls
            hosts: [*host]
    persistence:
      data:
        storageClass: cluster-nvme
        accessMode: ReadWriteOnce
        size: 1Gi
        retain: true
        advancedMounts:
          archivebox:
            init:
              - path: /data
                subPath: ./data
            app:
              - path: /data
                subPath: ./data
      media:
        enabled: true
        existingClaim: qbittorrent-media
        advancedMounts:
          jellyfin:
            app:
              - path: /media
      #      nfs-media:
      #        type: nfs
      #        server: ${NFS_HOST}
      #        path: ${NFS_MEDIA}
      #        advancedMounts:
      #          archivebox:
      #            app:
      #              - path: /data/r720xd-media
      #                readOnly: false
      #- path: "/data/r720xd-media/M Media/00-09 Archives/01 Backups/01.10 ArchiveBox"
